//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIKN
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBGYMEntities : DbContext
    {
        public DBGYMEntities()
            : base("name=DBGYMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TCarrito> TCarrito { get; set; }
        public virtual DbSet<TComentario> TComentario { get; set; }
        public virtual DbSet<TDetalle> TDetalle { get; set; }
        public virtual DbSet<TMaestro> TMaestro { get; set; }
        public virtual DbSet<TProducto> TProducto { get; set; }
        public virtual DbSet<TProvincia> TProvincia { get; set; }
        public virtual DbSet<TRol> TRol { get; set; }
        public virtual DbSet<TUsuario> TUsuario { get; set; }
    
        public virtual int ActualizarCuentaSP(string identificacion, string nombre, string correo, Nullable<long> conProvincia, Nullable<long> conUsuario)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var conProvinciaParameter = conProvincia.HasValue ?
                new ObjectParameter("ConProvincia", conProvincia) :
                new ObjectParameter("ConProvincia", typeof(long));
    
            var conUsuarioParameter = conUsuario.HasValue ?
                new ObjectParameter("ConUsuario", conUsuario) :
                new ObjectParameter("ConUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCuentaSP", identificacionParameter, nombreParameter, correoParameter, conProvinciaParameter, conUsuarioParameter);
        }
    
        public virtual int ActualizarEstadoUsuarioSP(Nullable<long> conUsuario)
        {
            var conUsuarioParameter = conUsuario.HasValue ?
                new ObjectParameter("ConUsuario", conUsuario) :
                new ObjectParameter("ConUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoUsuarioSP", conUsuarioParameter);
        }
    
        public virtual ObjectResult<IniciarSesionSP_Result> IniciarSesionSP(string correo, string contrasenna)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesionSP_Result>("IniciarSesionSP", correoParameter, contrasennaParameter);
        }

        public virtual int PagarCarrito(Nullable<long> conUsuario)
        {
            var conUsuarioParameter = conUsuario.HasValue ?
                new ObjectParameter("ConUsuario", conUsuario) :
                new ObjectParameter("ConUsuario", typeof(long));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagarCarrito", conUsuarioParameter);
        }
    


public virtual ObjectResult<RecuperarCuentaSP_Result> RecuperarCuentaSP(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecuperarCuentaSP_Result>("RecuperarCuentaSP", identificacionParameter);
        }
    
        public virtual int RegistrarCuentaSP(string identificacion, string nombre, string correo, string contrasenna)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarCuentaSP", identificacionParameter, nombreParameter, correoParameter, contrasennaParameter);
        }
    }
}
